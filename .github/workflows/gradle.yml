# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build

      - name: Grant Execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash

      - name: prod Docker build & push
        if: contains(github.ref, 'master')
        run: |
          docker login ${{ secrets.NCP_DOCKER_REGISTRY }} -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }}
          docker build -f Dockerfile -t ${{ secrets.NCP_DOCKER_REGISTRY }}/pimo-prod .
          docker push ${{ secrets.NCP_DOCKER_REGISTRY }}/pimo-prod

      - name: Deploy to Prod
        uses: appleboy/ssh-action@master
        id: deploy-prod
        if: contains(github.ref, 'master')
        with:
          host: ${{ secrets.NCP_PROD_SERVER_IP }}
          username: ${{ secrets.NCP_PROD_SERVER_USER }}
          password: ${{ secrets.NCP_PROD_SERVER_PASSWORD }}
          port: ${{ secrets.NCP_PROD_SERVER_SSH_PORT }}
          script: |
            sudo docker login ${{ secrets.NCP_DOCKER_REGISTRY }} -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }}
            sudo docker rm -f $(docker ps -q -a)
            sudo docker pull ${{ secrets.NCP_DOCKER_REGISTRY }}/pimo-prod
            docker-compose up -d
            docker image prune -f